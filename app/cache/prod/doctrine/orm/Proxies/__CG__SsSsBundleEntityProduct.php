<?php

namespace Proxies\__CG__\Ss\SsBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \Ss\SsBundle\Entity\Product implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'id', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'nama', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'description', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'harga', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'foto', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'stock', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'ongkir', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'is_publish', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'token', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'created_at', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'updated_at', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'carts', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'pesanans', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'fotos', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'categories', 'file');
        }

        return array('__isInitialized__', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'id', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'nama', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'description', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'harga', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'foto', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'stock', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'ongkir', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'is_publish', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'token', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'created_at', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'updated_at', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'carts', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'pesanans', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'fotos', '' . "\0" . 'Ss\\SsBundle\\Entity\\Product' . "\0" . 'categories', 'file');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNama($nama)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNama', array($nama));

        return parent::setNama($nama);
    }

    /**
     * {@inheritDoc}
     */
    public function getNama()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNama', array());

        return parent::getNama();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setHarga($harga)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHarga', array($harga));

        return parent::setHarga($harga);
    }

    /**
     * {@inheritDoc}
     */
    public function getHarga()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHarga', array());

        return parent::getHarga();
    }

    /**
     * {@inheritDoc}
     */
    public function setFoto($foto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFoto', array($foto));

        return parent::setFoto($foto);
    }

    /**
     * {@inheritDoc}
     */
    public function getFoto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFoto', array());

        return parent::getFoto();
    }

    /**
     * {@inheritDoc}
     */
    public function setStock($stock)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStock', array($stock));

        return parent::setStock($stock);
    }

    /**
     * {@inheritDoc}
     */
    public function getStock()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStock', array());

        return parent::getStock();
    }

    /**
     * {@inheritDoc}
     */
    public function setOngkir($ongkir)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOngkir', array($ongkir));

        return parent::setOngkir($ongkir);
    }

    /**
     * {@inheritDoc}
     */
    public function getOngkir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOngkir', array());

        return parent::getOngkir();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPublish($isPublish)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPublish', array($isPublish));

        return parent::setIsPublish($isPublish);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPublish()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPublish', array());

        return parent::getIsPublish();
    }

    /**
     * {@inheritDoc}
     */
    public function setToken($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToken', array($token));

        return parent::setToken($token);
    }

    /**
     * {@inheritDoc}
     */
    public function getToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToken', array());

        return parent::getToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array($updatedAt));

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function addCart(\Ss\SsBundle\Entity\Cart $carts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCart', array($carts));

        return parent::addCart($carts);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCart(\Ss\SsBundle\Entity\Cart $carts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCart', array($carts));

        return parent::removeCart($carts);
    }

    /**
     * {@inheritDoc}
     */
    public function getCarts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCarts', array());

        return parent::getCarts();
    }

    /**
     * {@inheritDoc}
     */
    public function addPesanan(\Ss\SsBundle\Entity\Pesanan $pesanans)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPesanan', array($pesanans));

        return parent::addPesanan($pesanans);
    }

    /**
     * {@inheritDoc}
     */
    public function removePesanan(\Ss\SsBundle\Entity\Pesanan $pesanans)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePesanan', array($pesanans));

        return parent::removePesanan($pesanans);
    }

    /**
     * {@inheritDoc}
     */
    public function getPesanans()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPesanans', array());

        return parent::getPesanans();
    }

    /**
     * {@inheritDoc}
     */
    public function addFoto(\Ss\SsBundle\Entity\ProductFoto $fotos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFoto', array($fotos));

        return parent::addFoto($fotos);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFoto(\Ss\SsBundle\Entity\ProductFoto $fotos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFoto', array($fotos));

        return parent::removeFoto($fotos);
    }

    /**
     * {@inheritDoc}
     */
    public function getFotos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFotos', array());

        return parent::getFotos();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategories(\Ss\SsBundle\Entity\Category $categories = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategories', array($categories));

        return parent::setCategories($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategories', array());

        return parent::getCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAtValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAtValue', array());

        return parent::setCreatedAtValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setTokenValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTokenValue', array());

        return parent::setTokenValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAtValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAtValue', array());

        return parent::setUpdatedAtValue();
    }

    /**
     * {@inheritDoc}
     */
    public function getCost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCost', array());

        return parent::getCost();
    }

    /**
     * {@inheritDoc}
     */
    public function getNamaSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNamaSlug', array());

        return parent::getNamaSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function getWebPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebPath', array());

        return parent::getWebPath();
    }

    /**
     * {@inheritDoc}
     */
    public function getAbsolutePath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbsolutePath', array());

        return parent::getAbsolutePath();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpload', array());

        return parent::preUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function upload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'upload', array());

        return parent::upload();
    }

    /**
     * {@inheritDoc}
     */
    public function removeUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUpload', array());

        return parent::removeUpload();
    }

}
